@model UserViewModelBase

@{
    bool isUserTypeDisabled = Model?.IsUserTypeDisabled ?? false;
}

<div class="form-group">
    <label asp-for="UserType" class="control-label"></label>
    <select id="userType"
            onchange="checkUserType()"
            asp-for="UserType"
            asp-items="Html.GetEnumSelectList<UserType>()"
            class="form-control"
            disabled="@(isUserTypeDisabled ? "disabled" : null)"></select>
    <span asp-validation-for="UserType" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="Name" class="control-label"></label>
    <input asp-for="Name" class="form-control" />
    <span asp-validation-for="Name" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="Surname" class="control-label"></label>
    <input asp-for="Surname" class="form-control" />
    <span asp-validation-for="Surname" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="Patronymic" class="control-label"></label>
    <input asp-for="Patronymic" class="form-control" />
    <span asp-validation-for="Patronymic" class="text-danger"></span>
</div>
<div class="form-group conditional @UserType.Student @UserType.Trainer" id="firstNameSection">
    <label asp-for="FirstName" class="control-label"></label>
    <input asp-for="FirstName" class="form-control" />
    <span asp-validation-for="FirstName" class="text-danger"></span>
</div>
<div class="form-group conditional @UserType.Student @UserType.Trainer" id="lastNameSection">
    <label asp-for="LastName" class="control-label"></label>
    <input asp-for="LastName" class="form-control" />
    <span asp-validation-for="LastName" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="CityId" class="control-label"></label>
    <select asp-for="CityId" class="form-control" asp-items="ViewBag.CityId" onchange="filterStudyPlaces()"></select>
    <span asp-validation-for="CityId" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="StudyPlaceId" class="control-label"></label>
    <select asp-for="StudyPlaceId" class="form-control"></select>
    <span asp-validation-for="StudyPlaceId" class="text-danger"></span>
</div>
@if (Model.CanSuggestStudyPlace)
{
    <div class="form-group">
        <p>Если вашего учебного заведения нет в списке, вы можете предложить администраторам сайта его добавить.</p>
        <p>Вы получите email уведомление, когда новое учебное закедение будет добавлено.</p>
        <p> <a id="suggestSchool" class="conditional @UserType.Pupil @UserType.Trainer" asp-controller="Home" asp-action="SuggestSchool">Предложить новую школу</a> </p>
        <p> <a id="suggestInstitution" class="conditional @UserType.Student @UserType.Trainer" asp-controller="Home" asp-action="SuggestInstitution">Предложить новый вуз/ссуз</a> </p>
    </div>
}
@*Student*@
<div class="form-group conditional @UserType.Student" id="educationStartDateSection">
    <label asp-for="EducationStartDate"></label>
    <input asp-for="EducationStartDate" class="form-control" type="date" />
    <span asp-validation-for="EducationStartDate" class="text-danger"></span>
</div>
<div class="form-group conditional @UserType.Student" id="educationEndDateSection">
    <label asp-for="EducationEndDate"></label>
    <input asp-for="EducationEndDate" class="form-control" type="date" />
    <span asp-validation-for="EducationEndDate" class="text-danger"></span>
</div>
<div class="form-group conditional @UserType.Student" id="dateOfBirthSection">
    <label asp-for="DateOfBirth"></label>
    <input asp-for="DateOfBirth" class="form-control" type="date" />
    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
</div>

@*Trainer*@
<div class="form-group">
    <label asp-for="PhoneNumber"></label>
    <input asp-for="PhoneNumber" class="form-control" />
    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
</div>

<input type="hidden" asp-for="IsUserTypeDisabled" />

<partial-script>
    <script type="text/javascript">
        const serverData = {};
        serverData.studyPlaces = @Html.RawJson(ViewData["StudyPlaces"]);
        serverData.userTypeMapping = @(Html.EnumAsJsMap<UserType>());


        function checkUserType() {
            const userType = parseInt($("#userType").val());
            const userTypeName = serverData.userTypeMapping.get(userType);
            $('.conditional').hide();
            $(`.conditional.${userTypeName}`).show();
            filterStudyPlaces();
        }

        function filterStudyPlaces() {
            let studyPlaces = serverData.studyPlaces;
            const userType = parseInt($("#userType").val());
            const cityId = parseInt($("#CityId").val());

            switch (userType) {
                case @((int)UserType.Pupil):
                    studyPlaces = studyPlaces.filter(sp => sp.Type === '@nameof(School)');
                    break;
                case @((int)UserType.Student):
                    studyPlaces = studyPlaces.filter(sp => sp.Type === '@nameof(Institution)');
                    break;
            }
            const studyPlaceIdSelect = $("#StudyPlaceId");
            const studyPlaceId = parseInt(studyPlaceIdSelect.val() || '@Model.StudyPlaceId');
            studyPlaceIdSelect.empty();
            studyPlaceIdSelect.select2({
                data: studyPlaces
                    .filter(sp => sp.CityId === cityId)
                    .map(sp => ({
                        id: sp.Id,
                        text: sp.ShortName,
                        selected: sp.Id === studyPlaceId,
                        studyPlace: sp
                    }))
            });
        }

        $(document).ready(function () {

            //alert($("IsUserTypeDefined").checked());
            //if ($("IsUserTypeDefined").val() == "True") {
            //    $("UserType").disable();
            //}
            checkUserType();
        });

    </script>
</partial-script>
